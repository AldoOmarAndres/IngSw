
name: Deploy web app to Azure Static Web Apps

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: ["main"]

# Variables de entorno a lo global
env:
  APP_LOCATION: "/" # client node
  API_LOCATION: "" # api si hubiese, la necesita Azure supus
  APP_ARTIFACT_LOCATION: "/dist" # file con la build
  AZURE_STATIC_WEB_APPS_API_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}

permissions:
  contents: read

jobs:
  test:
    permissions:
      contents: read
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - run: npm install
      - run: npm run test --if-present

#  sonar_cloud:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - name: SonarCloud Code Scan
#        uses: sonarsource/sonarcloud-github-action@master
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          args: >
#              -Dsonar.organization=aldoandres
#              -Dsonar.projectKey=AldoOmarAndres_IngSw

#  build_and_deploy_job:
#    needs: [test, sonar_cloud]
#    permissions:
#      contents: read # para el actions/checkout de fetch
#      pull-requests: write # si llegase a usar pr's
#    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
#    runs-on: ubuntu-latest
#    name: Build y Deploy
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          submodules: true
#
#      - name: Build And Deploy
#        id: builddeploy
#        uses: Azure/static-web-apps-deploy@v1
#        with:
#          azure_static_web_apps_api_token: ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN }}
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          action: "upload"
#          app_location: ${{ env.APP_LOCATION }}
#          api_location: ${{ env.API_LOCATION }}
#          app_artifact_location: ${{ env.APP_ARTIFACT_LOCATION }}
